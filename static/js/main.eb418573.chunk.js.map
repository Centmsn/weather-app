{"version":3,"sources":["assets/rain.mp4","components/LocalWeather.js","components/HourlyWeather.js","components/WeatherCard.js","components/UserWeather.js","components/SearchBar.js","components/AnimatedBg.js","components/Footer.js","components/App.js","index.js"],"names":["module","exports","LocalWeather","props","icon","weatherIcon","className","src","alt","name","temperature","weather","HourlyWeather","temp","time","pressure","clouds","iconUrl","WeatherCard","date","details","useState","displayDetails","setDisplayDetails","handleShowDetails","dailyWeather","onClick","hourlyWeather","map","el","key","dt","main","toFixed","all","dt_txt","slice","UserWeather","userForecast","currentTime","Date","getTime","dailyForecast","setDailyForecast","isLocationCorrect","setIsLocationCorrect","useEffect","getDailyForecast","ms","filter","match","toISOString","length","toUpperCase","renderedForecast","i","index","push","weatherCards","SearchBar","searchValue","setSearchValue","type","placeholder","value","onChange","e","target","fetchUserWeather","handleWeatherSearch","AnimatedBg","bg","autoPlay","muted","loop","Footer","href","App","state","localForecast","forecast","locationAllowed","preventDefault","fetch","then","response","status","json","setState","data","undefined","list","catch","err","console","log","window","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","description","this","rain","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb418573.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rain.fed6986c.mp4\";","import React from \"react\";\r\n\r\nimport \"../css/localweather.css\";\r\n\r\nconst LocalWeather = (props) => {\r\n  const icon = `http://openweathermap.org/img/wn/${props.weatherIcon}@2x.png`;\r\n  return (\r\n    <div className=\"local-weather\">\r\n      <div className=\"local-weather__icon\">\r\n        <img src={icon} alt=\"\" />\r\n      </div>\r\n      <div className=\"local-weather__name\">{props.name}</div>\r\n      <div className=\"local-weather__temp\">\r\n        {props.temperature}\r\n        <sup>o</sup>C\r\n      </div>\r\n      <div className=\"local-weather__desc\">\r\n        <p>Now in Your location: {props.weather}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocalWeather;\r\n","import React from \"react\";\r\n\r\nimport \"../css/hourlycard.css\";\r\n\r\nconst HourlyWeather = ({ icon, temp, pressure, clouds, time }) => {\r\n  const iconUrl = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n\r\n  return (\r\n    <li className=\"hourly-card__list-item\">\r\n      <img src={iconUrl} alt=\"weather icon\" className=\"hourly-card__list-img\" />\r\n      {temp}\r\n      <sup>o</sup>C<span className=\"hourly-card__list-time\">{time}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default HourlyWeather;\r\n","import React, { useState } from \"react\";\r\nimport HourlyWeather from \"./HourlyWeather\";\r\n\r\nimport \"../css/dailycard.css\";\r\n\r\nconst WeatherCard = ({\r\n  temp,\r\n  weather,\r\n  pressure,\r\n  weatherIcon,\r\n  date,\r\n  details,\r\n}) => {\r\n  const icon = `http://openweathermap.org/img/wn/${weatherIcon}@2x.png`;\r\n\r\n  const [displayDetails, setDisplayDetails] = useState(false);\r\n\r\n  const handleShowDetails = () => {\r\n    setDisplayDetails(!displayDetails);\r\n  };\r\n\r\n  const dailyWeather = (\r\n    <div className=\"daily-card\">\r\n      <div className=\"daily-card__icon\">\r\n        <img src={icon} alt={`${weather} icon`} />\r\n      </div>\r\n      <div className=\"daily-card__temperature\">\r\n        {temp}\r\n        <sup>o</sup>C\r\n      </div>\r\n      <div className=\"daily-card__pressure\">{pressure} hPa</div>\r\n      <div className=\"daily-card__date\">{date}</div>\r\n      <div className=\"daily-card__btn-box\">\r\n        <button className=\"daily-card__btn\" onClick={handleShowDetails}>\r\n          Show details\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  const hourlyWeather = (\r\n    <div className=\"hourly-card\">\r\n      <ul className=\"hourly-card__list\">\r\n        {details.map((el) => (\r\n          <HourlyWeather\r\n            key={el.dt}\r\n            icon={el.weather[0].icon}\r\n            temp={el.main.temp.toFixed(1)}\r\n            pressure={el.main.pressure}\r\n            clouds={el.clouds.all}\r\n            time={el.dt_txt.slice(11, -3)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <button className=\"hourly-card__btn\" onClick={handleShowDetails}>\r\n        Hide details\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return !displayDetails ? dailyWeather : hourlyWeather;\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport WeatherCard from \"./WeatherCard\";\r\n\r\nimport \"../css/weatherbar.css\";\r\n\r\nconst UserWeather = ({ userForecast, name }) => {\r\n  const currentTime = new Date().getTime();\r\n\r\n  const [dailyForecast, setDailyForecast] = useState([]);\r\n  const [isLocationCorrect, setIsLocationCorrect] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getDailyForecast = (ms = 0) => {\r\n      return [...userForecast].filter((el) =>\r\n        el.dt_txt.match(new Date(currentTime + ms).toISOString().slice(0, 10))\r\n      );\r\n    };\r\n    if (userForecast.length === 0) return;\r\n    if (typeof userForecast === \"string\") {\r\n      setIsLocationCorrect(false);\r\n      return;\r\n    } else {\r\n      setIsLocationCorrect(true);\r\n    }\r\n    setDailyForecast([\r\n      getDailyForecast(),\r\n      getDailyForecast(86400000),\r\n      getDailyForecast(172800000),\r\n      getDailyForecast(259200000),\r\n      getDailyForecast(345600000),\r\n    ]);\r\n  }, [userForecast]);\r\n  // domyslny ms na wiecej?\r\n  // jesli godzina > 22 i godzina > 2 to wyswietl pogode z dnia nastepnego z indeksem 0?\r\n\r\n  const weatherCards = () => {\r\n    if (userForecast.length === 0) return;\r\n    const renderedForecast = [];\r\n\r\n    for (let i = 0; i < dailyForecast.length; i++) {\r\n      let index = null;\r\n      i === 0 ? (index = 0) : (index = 5);\r\n      renderedForecast.push(\r\n        <WeatherCard\r\n          key={dailyForecast[i][index].dt}\r\n          temp={dailyForecast[i][index].main.temp.toFixed(1)}\r\n          weather={dailyForecast[i][index].weather[0].main}\r\n          weatherIcon={dailyForecast[i][index].weather[0].icon}\r\n          pressure={dailyForecast[i][index].main.pressure}\r\n          date={dailyForecast[i][index].dt_txt.slice(0, 10)}\r\n          details={dailyForecast[i]}\r\n        />\r\n      );\r\n    }\r\n    return renderedForecast;\r\n  };\r\n\r\n  return (\r\n    <div className=\"weather-bar\">\r\n      <div className=\"weather-bar__title\">{name.toUpperCase()}</div>\r\n      {isLocationCorrect ? (\r\n        weatherCards()\r\n      ) : (\r\n        <div className=\"weather-bar__error\">Oops... cannot find location</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserWeather;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"../css/searchbar.css\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const handleWeatherSearch = (e) => {\r\n    props.fetchUserWeather(e, searchValue);\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <form>\r\n        <input\r\n          className=\"search-bar__input\"\r\n          type=\"text\"\r\n          placeholder=\"Check weather in...\"\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n        />\r\n        <button\r\n          className=\"search-bar__btn\"\r\n          onClick={(e) => handleWeatherSearch(e)}\r\n        >\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nconst AnimatedBg = ({ bg }) => {\r\n  return (\r\n    <div className=\"animatedBg\">\r\n      <video src={bg} autoPlay muted loop>\r\n        There was a problem playing this video.\r\n      </video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimatedBg;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <a href=\"http://www.videezy.com\">\r\n        Additional Stock Footage Provided By Videezy.com\r\n      </a>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport LocalWeather from \"./LocalWeather\";\nimport UserWeather from \"./UserWeather\";\nimport SearchBar from \"./SearchBar\";\nimport AnimatedBg from \"./AnimatedBg\";\nimport Footer from \"./Footer\";\n\nimport \"../css/main.css\";\n// backgrounds\nimport rain from \"../assets/rain.mp4\";\n// import snow from \"../assets/snow.mp4\";\n// import sun from \"../assets/sun.mp4\";\n// import clouds from \"../assets/clouds.mp4\";\n\nclass App extends Component {\n  state = {\n    localForecast: {},\n    userForecast: {\n      forecast: [],\n      name: \"\",\n    },\n    locationAllowed: true,\n  };\n\n  fetchUserWeather = (e, value) => {\n    e.preventDefault();\n    if (!value) return;\n\n    fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?q=${value}&units=metric&appid=b7238569c5de7a001ca295ee92e8c746`\n    )\n      .then((response) => {\n        if (response.status !== 200) {\n          this.setState({\n            userForecast: {\n              forecast: \"error\",\n              name: \"\",\n            },\n          });\n        } else {\n          return response.json();\n        }\n      })\n      .then((data) => {\n        if (data === undefined) return;\n        this.setState({\n          userForecast: {\n            forecast: data.list,\n            name: value,\n          },\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        fetch(\n          `http://api.openweathermap.org/data/2.5/weather?lat=${pos.coords.latitude}&lon=${pos.coords.longitude}&units=metric&appid=b7238569c5de7a001ca295ee92e8c746`\n        )\n          .then((response) => {\n            if (response.status !== 200) {\n              return;\n            } else {\n              return response.json();\n            }\n          })\n          .then((data) =>\n            this.setState({\n              localForecast: {\n                temperature: data.main.temp.toFixed(1),\n                weather: data.weather[0].description,\n                weatherIcon: data.weather[0].icon,\n                name: data.name,\n              },\n            })\n          )\n          .catch((err) => console.log(err));\n      },\n\n      () => this.setState({ locationAllowed: false })\n    );\n  }\n  render() {\n    const { localForecast, userForecast } = this.state;\n    return (\n      <>\n        <div className=\"filter\">\n          <div className=\"container\">\n            <AnimatedBg bg={rain} />\n            {this.state.locationAllowed && (\n              <LocalWeather\n                temperature={localForecast.temperature}\n                weather={localForecast.weather}\n                weatherIcon={localForecast.weatherIcon}\n                name={localForecast.name}\n              />\n            )}\n            <SearchBar fetchUserWeather={this.fetchUserWeather} />\n            <UserWeather\n              userForecast={userForecast.forecast}\n              name={userForecast.name}\n            />\n            <Footer />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}